->> Topological Sort
->> Complexity: O(v + e)
->> Source: Safayet Blog

const int N = 1e5;

vector<int> graph[N];
vector<int> order;
queue<int> q;
int idg[N];

bool topsort(int n) {
  for (int i = 1; i <= n; i++) {
    for (auto u : graph[i]) {
      idg[u] += 1;
    }
  }
  for (int i = 1; i <= n; i++) {
    if (idg[i] == 0) {
      q.push(i);
    }
  }
  while(!q.empty()) {
    int node = q.front();
    order.push_back(node);
    q.pop();
    for (auto u : graph[node]) {
      idg[u] -= 1;
      if (idg[u] == 0) {
        q.push(u);
      }
    }
  }
  return (order.size() == n);
}

int main() {
  ios :: sync_with_stdio(false);
  cin.tie(0);
  int n, m; cin >> n >> m;
  for (int i = 0; i < m; i++) {
    int u, v; cin >> u >> v;
    graph[v].push_back(u);
  }
  bool f = topsort(n);
}
