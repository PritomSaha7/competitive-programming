// Articulation Points and Bridges
// Source: https://codeforces.com/blog/entry/71146
// Complexity: O(v + e)

const int N = 1e5 + 5;

vector<int> graph[N], points(N), low(N), disc(N);
vector<pair<int, int> > bridges;
int timer = 0;

int dfs(int u, int p) {
  int children = 0;
  low[u] = disc[u] = ++timer;
  for (auto v : graph[u]) {
    if (v == p) continue;
    if (!disc[v]) {
      children += 1;
      dfs(v, u);
      if (disc[u] <= low[v]) {
        points[u] = 1;
      }
      if (disc[u] < low[v]) {
        bridges.push_back({u, v});
      }
      low[u] = min(low[u], low[v]);
    } else {
      low[u] = min(low[u], disc[v]);
    }
  }
  return children;
}

void articulation(int n) {
  for (int u = 1; u <= n; u++) {
    if (!disc[u]) {
      points[u] = dfs(u, u) > 1;
    }
  }
}
