->> Strongly Connected Components
->> Source: Safayet Blog
->> Complexity: O(v + e)

const int N = 1e5;
vector<int> g[N], gr[N], scc[N];
int vis[N], use[N];
stack<int> stac;
int total = 0;

void dfs(int x) {
    use[x] = 1;
    for (auto u : g[x]) {
        if (use[u] == 0) {
            dfs(u);
        }
    }
    stac.push(x);
}

void dfs2(int x) {
    vis[x] = 1;
    scc[total].push_back(x);
    for (auto u : gr[x]) {
        if (vis[u] == 0) {
            dfs2(u);
        }
    }
}

int main() {
    ios :: sync_with_stdio(false);
    cin.tie(0);
    int n, m; cin >> n >> m;
    for (int i = 0; i < m; i++) {
        int u, v; cin >> u >> v;
        g[u].push_back(v);
        gr[v].push_back(u);
    }
    for (int i = 1; i <= n; i++) {
        if (use[i] == 0) {
            dfs(i);
        }
    }
    while(!stac.empty()) {
        int node = stac.top();
        stac.pop();
        if (vis[node] == 0) {
            total += 1;
            dfs2(node);
        }
    }
}
