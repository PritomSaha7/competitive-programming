// Euler's Totient Function
// Source: https://cp-algorithms.com/algebra/phi-function.html

// O(sqrt(n))

int totient(int n) {
  int ans = n;
  for (int i = 2; i * i <= n; i++) {
    if (n % i == 0) {
      while(n % i == 0) {
        n /= i;
      }
      ans -= ans / i;
    }
  }
  if (n > 1) {
    ans -= ans / n;
  }
  return ans;
}

// 1 to n 
// O(n log log n)

vector<int> phi;

void totient(int n) {
  phi.assign(n + 1, 0);
  iota(phi.begin(), phi.end(), 0);
  for (int i = 2; i <= n; i++) {
    if (phi[i] == i) {
      for (int j = i; j <= n; j += i) {
        phi[j] -= phi[j] / i;
      }
    }
  }
}
