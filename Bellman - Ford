->> Bellman Ford Algorithm
->> Source: Safayet Blog
->> Complexity: O(vertex * edges)

const int N = 1e3;
const int inf = 2e9;
vector<int> g[N + 10];
int dis[N + 10], previous[N + 10];

int main() {
    ios :: sync_with_stdio(false); cin.tie(0);
    int n, m; cin >> n >> m;
    for (int i = 0; i < m; i++) {
            int from, to, weight;
            cin >> from >> to >> weight;
            g[i].push_back(from);
            g[i].push_back(to);
            g[i].push_back(weight);
    }
    for (int i = 1; i <= n; i++) {
            dis[i] = inf;
    }
    dis[1] = previous[1] = 0;
    for (int i = 0; i < n - 1; i++) {
            for (int j = 0; j < m; j++) {
                    int from = g[j][0], to = g[j][1], weight = g[j][2];
                    if (dis[from] + weight < dis[to]) {
                            dis[to] = dis[from] + weight;
                            previous[to] = from;
                    }
            }
    }
    for (int j = 0; j < m; j++) {
            int from = g[j][0], to = g[j][1], weight = g[j][2];
            if (dis[from] + weight < dis[to]) {
                    printf("Negative cycle detected\n");
                    return 0;
            }
    }
    for (int i = 1; i <= n; i++) {
            printf("%d ", dis[i]);
    }
    return 0;
}
