->> How to add two large number ??

string addition(string a, string b) {
  if (a.size() > b.size()) {
    swap(a, b);
  }
  int la = a.size(), lb = b.size();
  reverse(a.begin(), a.end());
  reverse(b.begin(), b.end());
  int carry = 0;
  string res = "";
  for (int i = 0; i < la; i++) {
    int x = (a[i] - '0') + (b[i] - '0') + carry;
    res.push_back((x % 10) + '0');
    carry = x / 10;
  }
  for (int i = la; i < lb; i++) {
    int x = (b[i] - '0') + carry;
    res.push_back((x % 10) + '0');
    carry = x / 10;
  }
  if (carry) res.push_back(carry + '0');
  reverse(res.begin(), res.end());
  return res;
}

int main() {
  ios :: sync_with_stdio(false);
  cin.tie(0);
  string a = "12";
  string b = "198111";
  addition(a, b);
}

->> How to subtract two large number ??

bool small(string a, string b) {
  int la = a.size(), lb = b.size();
  if (la < lb) return true;
  if (la > lb) return false;
  for (int i = 0; i < la; i++) {
    if (a[i] < b[i]) return true;
    else if (a[i] > b[i]) return false;
  }
  return false;
}

string subtraction(string a, string b) {
  if (small(a, b)) swap(a, b);
  int la = a.size(), lb = b.size();
  reverse(a.begin(), a.end());
  reverse(b.begin(), b.end());
  int carry = 0;
  string res = "";
  for (int i = 0; i < lb; i++) {
    int x = (a[i] - '0') - (b[i] - '0') - carry;
    if (x < 0) {
      x += 10;
      carry = 1;
    } else {
      carry = 0;
    }
    res.push_back(x + '0');
  }
  for (int i = lb; i < la; i++) {
    int x = (a[i] - '0') - carry;
    if (x < 0) {
      x += 10;
      carry = 1;
    } else {
      carry = 0;
    }
    res.push_back(x + '0');
  }
  reverse(res.begin(), res.end());
  return res;
}

int main() {
  ios :: sync_with_stdio(false);
  cin.tie(0);
  string a = "110";
  string b = "99";
  subtraction(a, b);
}

->> How to multiply two large number ??

string multiply(string a, string b) {
  int la = a.size(), lb = b.size();
  vector<int> res(la + lb, 0);
  int __i = 0, __j = 0;
  for (int i = la - 1; i >= 0; i--) {
    __j = 0;
    int carry = 0;
    int p = a[i] - '0';
    for (int j = lb - 1; j >= 0; j--) {
      int q = b[j] - '0';
      int x = (p * q) + res[__i + __j] + carry;
      carry = x / 10;
      res[__i + __j] = x % 10;
      __j += 1;
    }
    if (carry) {
      res[__i + __j] += carry;
    }
    __i += 1;
  }
  int i = res.size() - 1;
  while(i >= 0 && res[i] == 0) {
    i -= 1;
  }
  if (i < 0) return "0";
  string ans = "";
  while(i >= 0) {
    ans += std :: to_string(res[i--]);
  }
  return ans;
}

int main() {
  ios :: sync_with_stdio(false);
  cin.tie(0);
  string a = "120";
  string b = "120";
}
