// KMP Algorithm for substring search
// Complexity: O(n + m)
// http://www.shafaetsplanet.com/?p=3209
// https://www.spoj.com/problems/NHAY/

vector<int> KMP(string s) {
  int n = (int) s.size();
  vector<int> lps(n);
  for (int i = 1; i < n; i++) {
    int j = lps[i - 1];
    while(j > 0 and s[i] != s[j]) {
      j = lps[j - 1];
    }
    if (s[i] == s[j]) {
      j++;
    }
    lps[i] = j;
  }
  return lps;
}

int main() {
  ios :: sync_with_stdio(false);
  cin.tie(0);
  string te, pa; cin >> te >> pa;
  string s = pa + '?' + te;
  vector<int> lps = KMP(s);
}
